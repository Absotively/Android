murderEventsLocation = {
  x = -41.37,
  y = 1.05,
  z = 0.75
}

function setUp(buttonOwner)
  buttonOwner.removeButton(0)
  setUpPuzzlePieces(shiftBagGUID)
  setUpPuzzlePieces(favorBagGUID)
  setUpPuzzlePieces(baggageBagGUID)

  getObjectFromGUID(evidenceBagGUID).randomize()
  getObjectFromGUID(genericEventDeckGUID).randomize()

  playerCount = countAndRemovePlayers()
  murder = chooseMurder()
  Wait.time(function() setUpMurder(murder, playerCount) end, 0.1)
end

function countAndRemovePlayers()
  colors = Player.getAvailableColors()
  playerCount = 0
  for _, color in ipairs(colors) do
    if Player[color].seated then
      playerCount = playerCount + 1
    else
      guids = playerObjectGUIDs[color]
      for item, guid in pairs(guids) do
        getObjectFromGUID(guid).destruct()
      end
    end
  end
  return playerCount
end

function setUpPuzzlePieces(bagGUID)
  bag = getObjectFromGUID(bagGUID)
  pos = bag.getPosition()
  bag.setPosition({pos.x + 5, pos.y, pos.z })
  bag.randomize()
  tileInfo = bag.getObjects()
  for j, tile in ipairs(tileInfo) do
    bag.takeObject({
      position = ({pos.x, pos.y + (0.3 * j), pos.z}),
      smooth = false
    })
  end
  bag.destruct()
end

function chooseMurder()
  for _, object in pairs(murderTrayZone.getObjects()) do
    name = murderNameFromBag(object)
    if name != nil then
      return name
    end
  end
  murdersBag = getObjectFromGUID(murdersBagGUID)
  murdersBag.randomize()
  murderBag = murdersBag.takeObject()
  murdersBag.destruct()
  return murderBag.getName()
end

function setUpMurder(murder, playerCount)
  sheet = getMurderSheet(murder)
  rotation = murderTrayLiner.getRotation()
  sheet.setRotation(rotation)
  sheet.setPosition(getSheetPlacement(playerCount, 0))
  murderEventsDeck = getMurderEvents(murder)
  murderEventsDeck.setPosition(murderEventsLocation)
  murderEventsDeck.setRotation({ 180, 0, 0 })
  murderEventsDeck.randomize()
  guiltyDeck = getObjectFromGUID(guiltyHunchDeckGUID)
  innocentDeck = getObjectFromGUID(innocentHunchDeckGUID)
  suspectDeck = getObjectFromGUID(suspectDeckGUID)
  for i = 1, 6 do
    suspect = murderData[murder]["suspects"][i]["id"]
    suspectSheet = getObjectFromGUID(suspectData[suspect]["guids"]["sheet"])
    guiltyCard = guiltyDeck.takeObject({guid = suspectData[suspect]["guids"]["guiltyHunchCard"]})
    innocentCard = innocentDeck.takeObject({guid = suspectData[suspect]["guids"]["innocentHunchCard"]})
    suspectToken = getObjectFromGUID(suspectData[suspect]["guids"]["token"])
    if i < playerCount + 2 then
      suspectSheet.setRotation(rotation)
      suspectSheet.setPosition(getSheetPlacement(playerCount, i))
      guiltyDeck.putObject(guiltyCard)
      innocentDeck.putObject(innocentCard)
      suspectToken.setRotation({180,0,0})
      suspectToken.setPosition(getNPCPosition(murderData[murder]["suspects"][i]["startingLocation"]))
    else
      suspectSheet.destruct()
      guiltyCard.destruct()
      innocentCard.destruct()
    end
  end
  crimeSceneToken = getObjectFromGUID(sceneOfCrimeTokenGUID)
  crimeSceneToken.setRotation({180,0,0})
  crimeSceneToken.setPosition(getCrimeSceneTokenPosition(murderData[murder]["crimeScene"]))
  Lily = getObjectFromGUID(LilyGUID)
  Lily.setRotation({180,0,0})
  Lily.setPosition(getNPCPosition(murderData[murder]["LilyStartingLocation"]))
  Jimmy = getObjectFromGUID(JimmyGUID)
  Jimmy.setRotation({180,0,0})
  Jimmy.setPosition(getNPCPosition(murderData[murder]["JimmyStartingLocation"]))
  dealHunchCards()
  cleanAfterSetup(murder)
end

function getSheetPlacement(playerCount, sheet)
  space = murderTrayLiner.getBounds()
  sheetWidth = 8.74
  sheetSpacing = 0.5
  leftMost = space.center.z - ((playerCount+2)*sheetWidth + (playerCount+1)*sheetSpacing)/2
  z = leftMost + (sheetWidth + sheetSpacing) * sheet
  y = space.center.y + space.size.y / 2 + 0.1
  x = space.center.x
  return {x, y, z}
end

function dealHunchCards()
  guiltyDeck = getObjectFromGUID(guiltyHunchDeckGUID)
  innocentDeck = getObjectFromGUID(innocentHunchDeckGUID)
  guiltyDeck.randomize()
  innocentDeck.randomize()
  for _, player in pairs(Player.getPlayers()) do
    print(player.color)
    trayLiner = getObjectFromGUID(playerObjectGUIDs[player.color]["tray"])
    print(trayLiner.getRotation().y)
    rotation = ({180, trayLiner.getRotation().y, 0})
    guiltyCard = guiltyDeck.takeObject()
    guiltyCard.setRotation(rotation)
    guiltyCard.setPosition(trayLiner.positionToWorld({15.8, 0.1, 1.4}))
    innocentCard = innocentDeck.takeObject()
    innocentCard.setRotation(rotation)
    innocentCard.setPosition(trayLiner.positionToWorld({15.8, 0.1, -1.4}))
  end
end
